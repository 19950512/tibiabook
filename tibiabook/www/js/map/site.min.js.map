{"version":3,"sources":["PushHistory.js","smoothScroll.js"],"names":[],"mappingshefile":"../site.min.js","sourcesContent":["var lockExitMessage = '',\n    XHRPopState = '',\n    XHRPopLastController = '/',\n    XHRPopStateScroll = {},\n    lockChangePageFn = false,\n    lockChangePage = false,\n    lockClosePage = false,\n    XHRPopStateShowStatus = true;\n\n/* Variáveis do push */\nvar controlador \t= '/',\n    action \t\t\t= '',\n    respostaAjax \t= '',\n    pushLoaderID \t= 'push-loader',\n    renderID\t\t= 'content'; /* Aqui irá o ID do elemento no DOM que recebera TODO o conteúdo do request 'HTML'*/\n\nconst init = configObj => {\n\n    /* Seta as variáveis por Default */\n    var xhrfn = function(){};\n    var lockChangePageFn = function(){};\n    var lockExitMessage = '';\n\n    if(typeof(configObj.xhrfn) === 'function'){\n        xhrfn = configObj.xhrfn;\n    }\n\n    if(typeof(configObj.lockChangePageFn) === 'function'){\n        lockChangePageFn = configObj.lockChangePageFn;\n    }\n\n    if(configObj.lockExitMessage){\n        lockExitMessage = configObj.lockExitMessage;\n    }\n\n    /* POPSTATE EVENT */\n    dev.add('popstate', window, function(evts){\n\n        if(lockChangePage === true){\n            lockChangePageFn(window.location.href);\n            return false;\n        }\n\n        var host = window.location.protocol+'//'+window.location.host;\n        var controler = window.location.href.replace(host, '')+'!popstate';\n        xhrfn(controler, function(){});\n\n    });\n\n    /* CLICK EVENTS */\n    dev.add('click', document, function(evts){\n\n        if(!navigator.onLine){\n            return false;\n        }\n\n        var elemt = evts.target;\n\n        var expJs = new RegExp('javascript:', 'i');\n        var expFTP = new RegExp('ftp:', 'i');\n        var expMail = new RegExp('mailto:', 'i');\n        var expWhatsapp = new RegExp('whatsapp:', 'i');\n\n        var domain = window.location.hostname;\n\n        if(elemt.parentElement !== null && elemt.nodeName !== 'BUTTON' && elemt.parentElement.nodeName === 'BUTTON'){\n            elemt = elemt.parentElement;\n        }\n\n        if(elemt.nodeName === 'BUTTON' && elemt.getAttribute('data-href') && elemt.getAttribute('data-href') !== false){\n\n            var hrefDomain = elemt.getAttribute('data-href').replace('http://', '');\n            hrefDomain = hrefDomain.replace('https://', '');\n\n            var re = new RegExp('^\\/', 'i');\n\n            if(re.test(hrefDomain) === true){\n                hrefDomain = domain+hrefDomain;\n            }\n\n            var urlIn = new RegExp('^'+domain, 'i');\n\n            if(urlIn.test(hrefDomain) === true){\n                goXHR(elemt.getAttribute('data-href'), xhrfn, lockChangePageFn);\n            }else{\n                var a = document.createElement('a');\n                a.href = elemt.getAttribute('data-href');\n                dev.trigger('click', a);\n            }\n        }else{\n\n            var flag = true;\n            while(flag === true){\n\n                /* SE NÃO FO UM <a> */\n                if(elemt.parentNode !== null && elemt.nodeName !== 'A'){\n                    elemt = elemt.parentNode;\n                }else{\n                    /* SE FOR UM <a> */\n                    flag = false;\n\n                    if(elemt.href){\n\n                        /* Remove o protocolo, http:// OU https:// */\n                        var hrefDomain = elemt.href.replace('http://', '');\n                        hrefDomain = hrefDomain.replace('https://', '');\n\n                        var urlIn = new RegExp('^'+domain, 'i');\n\n                        if(urlIn.test(hrefDomain) === true && !elemt.getAttribute('data-href')){\n\n                            /* GOXHR*/\n                            if(expJs.test(elemt.href) === false ||\n                                expFTP.test(elemt.href) === false ||\n                                expMail.test(elemt.href) === false ||\n                                expWhatsapp.test(elemt.href) === false ||\n                                !elemt.getAttribute('data-href')){\n\n                                if(evts.stopPropagation){\n                                    evts.stopPropagation();\n                                }\n                                if(evts.preventDefault){\n                                    evts.preventDefault();\n                                }\n\n                                goXHR(elemt.href, xhrfn, lockChangePageFn);\n                            }\n\n                        }\n                    }\n                }\n            }\n        }\n    });\n\n    /* beforeunload EVENT  */\n    dev.add('beforeunload', window, function(evts){\n        if(lockClosePage === true){\n\n            evts.cancelBubble = true;\n\n            evts.returnValue = lockExitMessage;\n\n            if(evts.stopPropagation){\n                evts.stopPropagation();\n            }\n\n            if(evts.preventDefault){\n                evts.preventDefault();\n            }\n\n            return lockExitMessage;\n        }\n    });\n}\n\nconst goXHR = (controler, xhrfn, lockChangePageFn) => {\n\n    if(lockChangePage === true && lockChangePageFn){\n        lockChangePageFn(controler);\n        return false;\n    }\n\n    var host = window.location.protocol+'//'+window.location.host;\n    var ctrlpage = window.location.href.replace(host, '');\n    ctrlpage = ctrlpage.replace(/\\?.*$/, '');\n    XHRPopStateScroll[ctrlpage] = window.scrollY || window.pageYOffset || document.documentElement.scrollTop;\n\n    xhrfn(controler, function(){\n        history.pushState({}, '', controler);\n    });\n}\n\nconst url = () => {\n\n    /* PEGA O PATHNAME DA URL - TUDO DEPOIS DO PRIMEIRO /, exp /contato */\n    let url = window.location.pathname;\n\n    /* IGNORA A VERSÃO MOBILE, EXP: /mobile/contato */\n    url = url.replace(mobile, '');\n\n    /* QUEBRA A URL */\n    url = url.split('/');\n\n    /* ATUALIZA A VARIAVEL CONTROLADOR */\n    if(url[1]){\n        controlador = url[1];\n    }\n\n    /* ATUALIZA A VARIAVEL ACTION */\n    if(url[2]){\n        action = url[2];\n    }\n}\n\nconst getAction = () =>{\n\n    /* ATUALIZA A ACTION */\n    url();\n\n    return action;\n}\n\nconst getControlador = () => {\n\n    /* ATUALIZA A CONTROLADOR */\n    url();\n\n    return controlador;\n}\n\nconst getXHRPopStateShowStatus = () => {\n\n    return XHRPopStateShowStatus;\n}\n\nconst setXHRPopStateShowStatus = st => {\n\n    XHRPopStateShowStatus = st;\n}\n\nconst seo = res =>{\n\n    /* ATUALIZA O SEO DA PÁGINA PELAS INFORMAÇÕES DA VIEW - CONTROLADOR */\n    if(typeof(res) !== 'undefined'){\n\n        if(res.title){\n            document.title = res.title;\n        }\n        if(res.description){\n            document.querySelector('meta[name=\"description\"]').setAttribute(\"content\", res.description);\n        }\n    }\n}\n\nconst xhrfn = (controler, doneCallFn) => {\n\n    /* pushLoader é o elemento que da o feedback para o usuário de que o push está acontecendo (pré loader) */\n    /* render é o elemento no DOM que irá receber todo o HTML do Push */\n    const pushLoader \t= document.getElementById(pushLoaderID);\n    const render \t\t= document.getElementById(renderID);\n\n    var expPopstate = /!popstate+$/g;\n    var expHash = /#[.*\\S]+$/g;\n    var expHashExtract = /#([.*\\S]+)$/i;\n    var atualLocation = XHRPopLastController.replace(expHash, '');\n\n    controler = controler.replace(expPopstate, '');\n    var testHash = controler;\n\n    /* SCROLL TO HASH ELEMENT */\n    if(expHashExtract.test(controler) === true){\n        var idByHash = controler.match(expHashExtract)[1];\n        if(a.id(idByHash)){\n            var idByHashTop = a.positionAtTop(a.id(idByHash));\n            window.scrollTo(0, idByHashTop);\n        }else{\n            window.scrollTo(0, XHRPopStateScroll[controler]);\n        }\n    }\n\n    pushLoader.style.width = '10%';\n    pushLoader.style.opacity = 1;\n\n    if(XHRPopState){\n        if(typeof(XHRPopState.abort) === 'function'){\n            if(getXHRPopStateShowStatus() === false){\n                console.warn('Cancelando request anterior.');\n            }\n            setXHRPopStateShowStatus(false);\n            XHRPopState.abort();\n        }\n    }\n\n    setXHRPopStateShowStatus(false);\n\n    XHRPopState = _fetch(controler);\n\n    document.body.style.cursor = 'wait';\n\n    render.classList.remove('push_open');\n    render.classList.add('push_close');\n    render.innerHTML = `\n\t\t<section class=\"content content_m content_h content_v\">\n\t\t\t<h1 class=\"text-center\"><i class=\"icl ic-spinner-third rotating\"></i> aguarde...</h1>\n\t\t</section>\n\t\t`;\n    // 300ms é o tempo da animação\n\n\n\n    dev.delay(() => {\n\n        /* SCROLL TO HASH ELEMENT */\n        if(expHashExtract.test(testHash) === true){\n            var idByHash = testHash.match(expHashExtract)[1];\n            if(a.id(idByHash)){\n                var idByHashTop = a.positionAtTop(a.id(idByHash));\n                window.scrollTo(0, idByHashTop);\n            }else{\n                window.scrollTo(0, XHRPopStateScroll[testHash]);\n            }\n        }else{\n\n            controlerscroll = controler.replace(/\\?.*$/, '');\n\n            if(XHRPopStateScroll[controlerscroll]){\n                window.scrollTo(0, XHRPopStateScroll[controlerscroll]);\n            }else if(XHRPopStateScroll['/'+controlerscroll]){\n                window.scrollTo(0, XHRPopStateScroll['/'+controlerscroll]);\n            }else{\n                window.scrollTo(0, 0);\n            }\n        }\n    }, 30);\n\n    let data = XHRPopState\n        .then( json => {\n\n            document.body.style.cursor = 'default';\n            let metas = '';\n            let html = '';\n\n            if(json.metas){\n                metas = json.metas;\n            }\n\n            if(json.html){\n                html = json.html;\n            }\n\n            /* ATUALIZA A VARIAVEL RESPOSTAAJAX */\n            respostaAjax = json;\n\n            setXHRPopStateShowStatus(true);\n\n            if(typeof(adminCloseMenu) !== 'undefined'){\n                adminCloseMenu();\n            }\n\n            doneCallFn();\n\n            pushLoader.style.width = '50%';\n\n            /* ATUALIZA O SEO DA PAGINA */\n            seo(metas);\n\n            render.classList.remove('push_close');\n            render.innerHTML = html;\n            render.classList.add('push_open');\n\n            dev.delay(() => {\n\n                /* SCROLL TO HASH ELEMENT */\n                if(expHashExtract.test(testHash) === true){\n                    var idByHash = testHash.match(expHashExtract)[1];\n                    if(dev.id(idByHash)){\n                        var idByHashTop = dev.positionAtTop(dev.id(idByHash));\n                        window.scrollTo(0, idByHashTop);\n                    }else{\n                        window.scrollTo(0, XHRPopStateScroll[testHash]);\n                    }\n                }else{\n\n                    controlerscroll = controler.replace(/\\?.*$/, '');\n\n                    if(XHRPopStateScroll[controlerscroll]){\n                        window.scrollTo(0, XHRPopStateScroll[controlerscroll]);\n                    }else if(XHRPopStateScroll['/'+controlerscroll]){\n                        window.scrollTo(0, XHRPopStateScroll['/'+controlerscroll]);\n                    }else{\n                        window.scrollTo(0, 0);\n                    }\n                }\n\n                /* ESTE TRECHO É IMPORTANTISSIMO PARA EXECUTAR O JS DAS VIEWS, SEM ISSO NÃO EXECUTA JS DAS VIEWS! */\n                var scripts = render.getElementsByTagName('script');\n                var script_code = '';\n                for(x in scripts){\n                    if(scripts[x].innerHTML){\n                        script_code += scripts[x].innerHTML;\n                        listaScript.push(scripts[x].innerHTML);\n                    }\n                }\n\n                /* SE TIVER DE0 FATO, ALGUM SCRIPT */\n                if(script_code !== ''){\n                    var blob = new Blob([script_code], {type: 'text/javascript'});\n                    var urlScript = window.URL || window.webkitURL;\n                    var url = urlScript.createObjectURL(blob);\n                    pushScript(url);\n                }\n            }, 30);\n\n            /* CONTROLADOR INDEX */\n            if(controlador == \"/\"){\n\n                pushLoader.style.width = '100%';\n\n                dev.delay(() => pushLoader.style.opacity = 0, 500);\n\n                /* OUTROS */\n            }else{\n\n                dev.delay(() => {\n\n                    pushLoader.style.width = '100%';\n                    dev.delay(() => pushLoader.style.opacity = 0, 500);\n                    dev.delay(() => pushLoader.style.width = '0%', 1000);\n\n                }, 30);\n            }\n\n        });\n}\n\n/*\n\t_fetch de fato, é o responsável por fazer o request para o servidor.\n\tOBS: usa-se o POST['push'] para justamente o backend entender e saber oque fazer com o request.\n*/\n\n\n/* Lista armazena os script qu0e são Ex0ecutados */\n\nvar listaScript = new Array();\nconst pushScript = (url, callback) => {\n    /* CRIA O SCRIPT NO HEAD*/\n    var head = document.getElementsByTagName('head')[0];\n    var script = document.createElement('script');\n    script.type = 'text/javascript';\n    script.src = url;\n\n    /* ISSO AQUI, É PARA EVITAR QUE VÁRIOS SCRIPTS FIQUEM NO HEAD */\n    var scripts_existentes = head.querySelectorAll('[type=\"text/javascript\"]');\n    if(!(scripts_existentes.length <= 0)){\n        for(var i = 0; i < scripts_existentes.length; i++){\n            scripts_existentes[i].remove();\n        }\n    }\n\n    /* SE HOUVER UM CALLBACK */\n    script.onreadystatechange = callback;\n    script.onload = callback;\n\n    /* ADICIONA O SCRIPT / BLOB */\n    head.appendChild(script);\n\n}\n\nconst _fetch = async (controler) => {\n\n    try {\n\n        return fetch(controler, {\n            method: 'POST',\n            mode: 'cors',\n            headers: {\n                'Content-Type':'application/x-www-form-urlencoded'\n            },\n            body: 'push=push'\n        }).then(resposta => {\n\n            let res = resposta.clone().json();\n            return res;\n\n        }).catch (error => {\n                console.error(error)\n            }\n        );\n\n    } catch (erro) {\n        console.error('ERROW: ' + erro);\n    }\n}\n\n\ninit({\n    'lockExitMessage': lockExitMessage,\n    'xhrfn': xhrfn,\n    'lockChangePageFn': lockChangePageFn\n});","window.ancoraativa = 0;\nwindow.smoothScroll = {\n\tvelocidade_padrao: 2000,\n\teaseInOutQuart: (time, from, distance, dutation) => {\n\n\t\tif ((time /= dutation / 2) < 1){\n\n\t\t\treturn distance / 2 * time * time * time * time + from;\n\t\t}\n\n\t\treturn -distance / 2 * ((time -= 2) * time * time * time - 2) + from;\n\t},\n\tgetScrollTopByHref: element => document.querySelector(element.getAttribute('href')).offsetTop,\n\tscrollToPosition: (to, dutation) => {\n\t\tsmoothScroll.smoothScrollTo(0, to, dutation);\n\t},\n\tscrollToIdOnClick: (event, dutation) => {\n\n\t\tif(ancoraativa !== 2){\n\n\t\t\tancoraativa = 1;\n\n\t\t\tif(ancoraativa === 1){\n\t\t\t\tevent.preventDefault();\n\t\t\t\tvar to = smoothScroll.getScrollTopByHref(event.currentTarget);\n\t\t\t\tsmoothScroll.scrollToPosition(to, dutation);\n\t\t\t}\n\t\t}\n\t},\n\tsmoothScrollTo: (endX, endY, dutation = smoothScroll.velocidade_padrao) => {\n\n\t\t/* Caso houver um header para descontar a rolagem */\n\t\tvar header = 0;\n\t\t/* PC */\n\t\tdev.id('headerFixo') ? header = Boss.getById('headerFixo').clientHeight : false;\n\n\t\t/* Mobile*/\n\t\tdev.id('headerMobile') ? header = Boss.getById('headerMobile').clientHeight : false;\n\n\t\tvar startY = window.scrollY || window.pageYOffset;\n\t\tvar distanceY = endY - (startY + header);\n\t\tvar startTime = new Date().getTime();\n\n\t\tvar timer = setInterval(function () {\n\n\t\t\tvar time = new Date().getTime() - startTime;\n\t\t\tvar newY = smoothScroll.easeInOutQuart(time, startY, distanceY, dutation);\n\n\t\t\tif (time >= dutation || ancoraativa == 3){\n\n\t\t\t\tclearInterval(timer);\n\t\t\t\tancoraativa = 0;\n\t\t\t}\n\n\t\t\twindow.scroll(0, newY);\n\t\t}, 1000 / 60);\n\t},\n\tinit: () => {\n\t\t\n\t\tdutation = arguments.length > 0 ? arguments[0] : 2000;\n\t\tif(arguments.length > 1) throw new Error(\"Too many arguments! Expected 1.\");\n\n\t\tvar menuItems = document.querySelectorAll('a[href^=\"#\"]');\n\n\t\tmenuItems.forEach(function (item) {\n\n\t\t\tdev.add('click', item, function(evt){\n\t\t\t\tsmoothScroll.scrollToIdOnClick(evt, dutation);\n\t\t\t});\n\t\t});\n\t},\n\tgo: (element, destino, duration = smoothScroll.velocidade_padrao) => {\n\n\t\tif(ancoraativa !== 2){\n\n\t\t\tancoraativa = 1;\n\n\t\t\tif(ancoraativa === 1){\n\t\t\t\tancoraativa = 2;\n\n\t\t\t\tif(Boss.getById(destino)){\n\n\t\t\t\t\tvar yorigem = element.offsetTop;\n\t\t\t\t\tvar ydestino = Boss.getById(destino).offsetTop;\n\n\t\t\t\t\tsmoothScroll.smoothScrollTo(yorigem, ydestino, duration);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tgoTop: () => {\n\t\tif(ancoraativa !== 2){\n\n\t\t\tancoraativa = 1;\n\n\t\t\tif(ancoraativa === 1){\n\t\t\t\tvar yorigem = window.scrollY;\n\t\t\t\tancoraativa = 2;\n\t\t\t\tvar ydestino = Boss.getById('push-loader').offsetTop;\n\t\t\t\tsmoothScroll.smoothScrollTo(yorigem, ydestino, this.velocidade_padrao);\n\t\t\t}\n\t\t}\n\t}\n};\n\n/* PAUSA O SCROLL - SUAVE QUANDO PRESSIONA AS TECLAS, PAGEDOWN, PAGEUP, SETA CIMA E BAIXO */\ndev.add('keydown', window, function(event){\n\tvar btn = event.keyCode;\n\tif(btn === 38 || btn === 40 || btn === 35 || btn === 36 || btn === 34 || btn === 33 || btn === 32){\n\t\tancoraativa = 3;\n\t}\n});\n\n/* PAUSA O SCROLL - SUAVE QUANDO O SCROLL DO MOUSE É ACIONADO (usuario tentando usar o scroll) */\ndev.add('wheel', window, () => ancoraativa = 3);\n\n/* PAUSA O SCROLL - SUAVE QUANDO O SCROLL DO MOUSE É ACIONADO (usuario tentando usar o scroll) */\ndev.add('touchmove', window, () => ancoraativa = 3);"]}